// Code to insert data to coreData
let appDelegate = UIApplication.shared.delegate as! AppDelegate
let context = appDelegate.persistentContainer.viewContext
let newUser = NSEntityDescription.insertNewObject(forEntityName: "Users", into: context)

newUser.setValue(userNames, forKey: "userName")
newUser.setValue(passwords, forKey: "password")
do
{
    try context.save()
    print("Saved")
    userNameTf.text = ""
    passwordTf.text = ""
}
catch
{
    // Process Error
}

// Code to see data from CoreData

let appDelegate = UIApplication.shared.delegate as! AppDelegate
let context = appDelegate.persistentContainer.viewContext
let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Users")
request.returnsObjectsAsFaults = false
do
{
    let results = try context.fetch(request)
    if results.count > 0
    {
        for result in results as! [NSManagedObject]
        {
            //                    context.delete(result)
            
            if let userName = result.value(forKey: "userName")
            {
                print("User Name:\(userName)")
            }
            if let password = result.value(forKey: "password")
            {
                print("Password: \(password)")
            }
        }
       
    }
    
}
catch
{
    
}
// Code to update data of particular person in core data

let appDelegate = UIApplication.shared.delegate as! AppDelegate
let context = appDelegate.persistentContainer.viewContext
let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Users")
request.returnsObjectsAsFaults = false
do
{
    let results = try context.fetch(request)
    if results.count > 0
    {
        for result in results as! [NSManagedObject]
        {
            if let userName = result.value(forKey: "userName") as? String
            {
                if userName == selectUserNameTf.text
                {
                    if newUserNameTf.text?.isEmpty == false
                    {
                        result.setValue(newUserNameTf.text, forKey: "userName")
                    }
                    if newUserPassword.text?.isEmpty == false
                    {
                        result.setValue(newUserPassword.text, forKey: "password")
                    }
                    
                    do
                    {
                        try context.save()
                    }
                    catch
                    {
                        
                    }
                }
            }
        }
    }
    else
    {
        print("Noo Data Found")
    }
    
}
catch
{
    
}
// Code to delete all data from core data

let appDelegate = UIApplication.shared.delegate as! AppDelegate
let context = appDelegate.persistentContainer.viewContext
let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Users")
request.returnsObjectsAsFaults = false
do
{
    let results = try context.fetch(request)
    if results.count > 0
    {
        for result in results as! [NSManagedObject]
        {
            context.delete(result)
        }
        try context.save()
    }
    else
    {
        print(results)
    }
    
}
catch
{
    
}
// Code to delete particular person data from core data


let appDelegate = UIApplication.shared.delegate as! AppDelegate
let context = appDelegate.persistentContainer.viewContext
let request = NSFetchRequest<NSFetchRequestResult>(entityName: "Users")
request.returnsObjectsAsFaults = false
do
{
    let results = try context.fetch(request)
    if results.count > 0
    {
        for result in results as! [NSManagedObject]
        {
            
            if let userName = result.value(forKey: "userName") as? String
            {
                if userName == userNameArray[indexPath.row]
                {
                    context.delete(result)
                }
            }
            do
            {
                try context.save()
            }
            catch
            {
                
            }
            
        }
    }
    else
    {
        print("Noo Data Found")
    }
    
}
catch
{
    
}
